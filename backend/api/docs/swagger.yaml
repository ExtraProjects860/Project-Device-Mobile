basePath: /
definitions:
  dto.ProductDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      discount:
        type: number
      id:
        type: integer
      is_avaible:
        type: boolean
      is_promotion_avaible:
        type: boolean
      name:
        type: string
      photo_url:
        type: string
      quantity:
        type: integer
      updated_at:
        type: string
      value:
        type: number
    type: object
  dto.UserDTO:
    properties:
      cpf:
        type: string
      created_at:
        type: string
      email:
        type: string
      enterprise:
        type: string
      id:
        type: integer
      name:
        type: string
      photo_url:
        type: string
      register_number:
        type: integer
      role:
        type: string
      updated_at:
        type: string
    type: object
  dto.WishListDTO:
    properties:
      id:
        type: integer
      item_count:
        type: integer
      products:
        items:
          $ref: '#/definitions/dto.ProductDTO'
        type: array
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.ProductRequest:
    properties:
      description:
        type: string
      discount:
        type: number
      is_avaible:
        type: boolean
      is_promotion_avaible:
        type: boolean
      name:
        type: string
      photo_url:
        type: string
      quantity:
        type: integer
      value:
        type: number
    required:
    - description
    - name
    - quantity
    - value
    type: object
  request.UserRequest:
    properties:
      cpf:
        type: string
      email:
        type: string
      enterprise_id:
        type: integer
      name:
        type: string
      password:
        minLength: 6
        type: string
      photo_url:
        type: string
      register_number:
        type: integer
      role_id:
        type: integer
    required:
    - cpf
    - email
    - name
    - password
    - register_number
    - role_id
    type: object
  request.WishListRequest:
    properties:
      product_id:
        type: integer
      user_id:
        type: integer
    required:
    - product_id
    - user_id
    type: object
  response.ErrResponse:
    properties:
      error:
        type: string
    type: object
host: localhost:5050
info:
  contact: {}
  description: Essa é uma api voltada para um projeto extensionista para programação
    em dispositivos móveis
  title: Project Device Mobile API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns access token
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: User Login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the user and invalidates token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User Logout
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes the authentication token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh Token
      tags:
      - auth
  /api/v1/auth/request-token:
    post:
      consumes:
      - application/json
      description: Requests a reset token for user password
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request Password Token
      tags:
      - auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets user password using the token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset Password
      tags:
      - auth
  /api/v1/product:
    patch:
      consumes:
      - application/json
      description: Updates an existing product
      parameters:
      - description: Product ID
        in: query
        name: id
        required: true
        type: string
      - description: Product info to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Update Product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Creates a new product
      parameters:
      - description: Product info
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProductDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Create Product
      tags:
      - products
  /api/v1/products:
    get:
      description: Returns all products
      parameters:
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProductDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Get Products
      tags:
      - products
  /api/v1/user:
    get:
      description: Returns information about a specific user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Get User Info
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates an existing user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: User info to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Update User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Create User
      tags:
      - users
  /api/v1/users:
    get:
      description: Returns a list of all users
      parameters:
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Get Users
      tags:
      - users
  /api/v1/wishlist:
    delete:
      description: Delete a product from the user wish list
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Delete Product from Wish List
      tags:
      - wishlist
    get:
      description: Returns all products in the user wish list
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.WishListDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Get Wish List Items
      tags:
      - wishlist
    post:
      consumes:
      - application/json
      description: Adds a product to the user wish list
      parameters:
      - description: WishList info
        in: body
        name: wishlist
        required: true
        schema:
          $ref: '#/definitions/request.WishListRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.WishListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Add Product to Wish List
      tags:
      - wishlist
  /health/api:
    get:
      description: Returns a simple message to confirm API is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: API status check
      tags:
      - health
  /health/database:
    get:
      description: Tests connection to the database and returns status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Database status check
      tags:
      - health
  /health/email:
    get:
      description: Calls external email service to verify availability
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Email service check
      tags:
      - health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
