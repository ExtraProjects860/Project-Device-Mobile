basePath: /
definitions:
  dto.EnterpriseDTO:
    properties:
      created_at:
        example: "2025-10-10T08:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Empresa XPTO
        type: string
      updated_at:
        example: "2025-10-12T09:30:00Z"
        type: string
    type: object
  dto.ProductDTO:
    properties:
      created_at:
        example: "2025-10-12T20:00:00Z"
        type: string
      description:
        example: Smartphone de última geração
        type: string
      discount:
        example: 10.5
        type: number
      id:
        example: 100
        type: integer
      is_avaible:
        example: true
        type: boolean
      is_promotion_avaible:
        example: true
        type: boolean
      name:
        example: Smartphone X
        type: string
      photo_url:
        example: https://cdn.exemplo.com/produtos/smartphone-x.jpg
        type: string
      quantity:
        example: 50
        type: integer
      updated_at:
        example: "2025-10-12T21:00:00Z"
        type: string
      value:
        example: 2999.99
        type: number
    type: object
  dto.RoleDTO:
    properties:
      created_at:
        example: "2025-10-12T21:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: admin
        type: string
      updated_at:
        example: "2025-10-12T21:05:00Z"
        type: string
    type: object
  dto.UserDTO:
    properties:
      cpf:
        example: 123.456.789-00
        type: string
      created_at:
        example: "2025-10-12T21:00:00Z"
        type: string
      email:
        example: joao@example.com
        type: string
      enterprise:
        example: Empresa XPTO
        type: string
      id:
        example: 1
        type: integer
      name:
        example: João da Silva
        type: string
      photo_url:
        example: https://cdn.exemplo.com/fotos/joao.jpg
        type: string
      register_number:
        example: "20210012"
        type: string
      role:
        example: admin
        type: string
      updated_at:
        example: "2025-10-12T21:05:00Z"
        type: string
    type: object
  dto.WishListMinimalDTO:
    properties:
      product_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  request.EnterpriseRequest:
    properties:
      name:
        minLength: 3
        type: string
    required:
    - name
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
      remember_me:
        type: boolean
    required:
    - email
    - password
    type: object
  request.ProductRequest:
    properties:
      description:
        maxLength: 255
        minLength: 3
        type: string
      discount:
        minimum: 0
        type: number
      is_avaible:
        type: boolean
      is_promotion_avaible:
        type: boolean
      name:
        minLength: 3
        type: string
      photo_url:
        type: string
      quantity:
        minimum: 0
        type: integer
      value:
        type: number
    required:
    - description
    - name
    - quantity
    - value
    type: object
  request.RoleRequest:
    properties:
      name:
        minLength: 3
        type: string
    required:
    - name
    type: object
  request.UserRequest:
    properties:
      cpf:
        type: string
      email:
        type: string
      enterprise_id:
        type: integer
      name:
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      photo_url:
        type: string
      register_number:
        maxLength: 7
        minLength: 7
        type: string
      role_id:
        type: integer
    required:
    - cpf
    - email
    - name
    - password
    - register_number
    - role_id
    type: object
  response.ErrResponse:
    properties:
      error:
        type: string
    type: object
  response.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:5050
info:
  contact: {}
  description: Essa é uma api voltada para um projeto extensionista para programação
    em dispositivos móveis
  title: Project Device Mobile API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns access token
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: User Login
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      deprecated: true
      description: Refreshes the authentication token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Refresh Token
      tags:
      - auth
  /api/v1/auth/request-token:
    post:
      consumes:
      - application/json
      description: Requests a reset token for user password
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request Password Token
      tags:
      - auth
  /api/v1/auth/reset-pass-log-in:
    post:
      consumes:
      - application/json
      description: Resets user password log in system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset Password Log In
      tags:
      - auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets user password using the token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Reset Password
      tags:
      - auth
  /api/v1/enterprise:
    post:
      consumes:
      - application/json
      description: Creates a new enterprise
      parameters:
      - description: Enterprise info
        in: body
        name: enterprise
        required: true
        schema:
          $ref: '#/definitions/request.EnterpriseRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.EnterpriseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Create Enterprise
      tags:
      - enterprises
    put:
      consumes:
      - application/json
      description: Updates an existing enterprise by ID
      parameters:
      - description: Enterprise ID
        in: query
        name: id
        required: true
        type: integer
      - description: Enterprise info to update
        in: body
        name: enterprise
        required: true
        schema:
          $ref: '#/definitions/request.EnterpriseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EnterpriseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Update Enterprise
      tags:
      - enterprises
  /api/v1/enterprises:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of enterprises
      parameters:
      - description: Items per page
        in: query
        name: itemsPerPage
        required: true
        type: integer
      - description: Current page number
        in: query
        name: currentPage
        required: true
        type: integer
      - description: Search item by filter
        in: query
        name: searchFilter
        type: string
      - description: Order direction
        enum:
        - ASC
        - DESC
        in: query
        name: itemsOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.EnterpriseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: List Enterprises
      tags:
      - enterprises
  /api/v1/product:
    patch:
      consumes:
      - application/json
      description: Updates an existing product
      parameters:
      - description: Product ID
        in: query
        name: id
        required: true
        type: string
      - description: Product info to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.ProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Update Product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Creates a new product
      parameters:
      - description: Product info
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ProductDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Create Product
      tags:
      - products
  /api/v1/products:
    get:
      description: Returns all products
      parameters:
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      - description: Search item by filter
        in: query
        name: searchFilter
        type: string
      - description: Order direction
        enum:
        - ASC
        - DESC
        in: query
        name: itemsOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProductDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Get Products
      tags:
      - products
  /api/v1/role:
    post:
      consumes:
      - application/json
      description: Creates a new role
      parameters:
      - description: Role info
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.RoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RoleDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Create Role
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Updates an existing role by ID
      parameters:
      - description: role ID
        in: query
        name: id
        required: true
        type: integer
      - description: Role info to update
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/request.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Update Role
      tags:
      - roles
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of roles
      parameters:
      - description: Items per page
        in: query
        name: itemsPerPage
        required: true
        type: integer
      - description: Current page number
        in: query
        name: currentPage
        required: true
        type: integer
      - description: Search item by filter
        in: query
        name: searchFilter
        type: string
      - description: Order direction
        enum:
        - ASC
        - DESC
        in: query
        name: itemsOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.RoleDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: List Roles
      tags:
      - roles
  /api/v1/user:
    get:
      description: Returns information about a specific user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Get User Info
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Updates an existing user
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: User info to update
        in: body
        name: user
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User info
        in: body
        name: user
        schema:
          $ref: '#/definitions/request.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Create User
      tags:
      - users
  /api/v1/users:
    get:
      description: Returns a list of all users
      parameters:
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      - description: Search item by filter
        in: query
        name: searchFilter
        type: string
      - description: Order direction
        enum:
        - ASC
        - DESC
        in: query
        name: itemsOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Get Users
      tags:
      - users
  /api/v1/wishlist:
    delete:
      description: Delete a product from the user wish list
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.WishListMinimalDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Delete Product from Wish List
      tags:
      - wishlist
    get:
      description: Returns all products in the user wish list
      parameters:
      - description: Pagination Items
        in: query
        name: itemsPerPage
        required: true
        type: string
      - description: Pagination Current Page
        in: query
        name: currentPage
        required: true
        type: string
      - description: Search item by filter
        in: query
        name: searchFilter
        type: string
      - description: Order direction
        enum:
        - ASC
        - DESC
        in: query
        name: itemsOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ProductDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Get Wish List Items
      tags:
      - wishlist
    post:
      consumes:
      - application/json
      description: Adds a product to the user wish list
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.WishListMinimalDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Add Product to Wish List
      tags:
      - wishlist
  /health/api:
    get:
      description: Returns a simple message to confirm API is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: API status check
      tags:
      - health
  /health/database:
    get:
      description: Tests connection to the database and returns status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Database status check
      tags:
      - health
  /health/email:
    get:
      description: Calls external email service to verify availability
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Email service check
      tags:
      - health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
